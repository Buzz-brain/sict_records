<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Personal Information Page</title>
  <link rel="stylesheet" href="profile.css">
</head>

<body>
  <div class="container">
    <aside class="sidebar">
      <div class="profile">
        <div class="profile-picture"></div>
        <p id="name"></p>
      </div>
      <nav class="sidebar-menu">
        <ul>
          <li class="active"><a href="/staffProfile">Personal Information</a></li>
          <li><a href="/staffMedical">Medical Records</a></li>
        </ul>
      </nav>
    </aside>
    <main class="main-content">
      <div class="header">
        <h1>Personal Information</h1>
        <button class="btn-edit" id="edit-btn">Edit Profile</button>
      </div>
      <form class="form" id="profile-form">
        <div class="form-row">
          <label>Staff Id</label>
          <input type="text" id="staffId" disabled>
        </div>
        <div class="form-row">
          <label>Date of Birth</label>
          <input type="date" id="dateOfBirth" disabled>
        </div>
        <div class="form-row">
          <label>Email Address</label>
          <input type="email" id="email" disabled>
        </div>
        <div class="form-row">
          <label>Gender</label>
          <input type="text" id="gender" disabled>
        </div>
        <div class="form-row">
          <label>Nationality</label>
          <input type="text" id="nationality" disabled>
        </div>
        <div class="form-row">
          <label>Phone Number</label>
          <input type="tel" id="phoneNumber" disabled>
        </div>
        <div class="form-row">
          <label>Address</label>
          <input type="text" id="address" disabled>
        </div>
        <div class="form-row">
          <label>Profession</label>
          <input type="text" id="profession" disabled>
        </div>
        <div class="form-row">
          <label>Degree</label>
          <input type="text" id="degree" disabled>
        </div>
        <!-- <div class="form-row">
          <label>Profile Photo</label>
          <button class="btn-upload" id="upload-photo-btn">Upload New Photo</button>
        </div> -->
      </form>
    </main>
  </div>

  <script>
    const editBtn = document.getElementById('edit-btn');
    const profileForm = document.getElementById('profile-form');
    const inputs = profileForm.querySelectorAll('input');

    let isEditing = false;

    editBtn.addEventListener('click', () => {
      if (!isEditing) {
        inputs.forEach(input => input.disabled = false);
        editBtn.textContent = 'Save Changes';
        isEditing = true;
      } else {
        updateProfile();
      }
    });

    const updateProfile = async () => {
      try {
        const staffId = document.getElementById('staffId').value;
        const dateOfBirth = document.getElementById('dateOfBirth').value;
        const email = document.getElementById('email').value;
        const gender = document.getElementById('gender').value;
        const nationality = document.getElementById('nationality').value;
        const phoneNumber = document.getElementById('phoneNumber').value;
        const address = document.getElementById('address').value;
        const degree = document.getElementById('degree').value;
        const profession = document.getElementById('profession').value;

        const token = localStorage.getItem('token');

        const response = await fetch('/api/staffs/staff-profile', {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify({
            dateOfBirth,
            email,
            gender,
            nationality,
            phoneNumber,
            address,
            degree,
            profession,
          })
        });

        const data = await response.json();

        if (response.ok) {
          console.log(data);
          inputs.forEach(input => input.disabled = true);
          editBtn.textContent = 'Edit Profile';
          isEditing = false;
        } else {
          console.error(data);
        }
      } catch (err) {
        console.error(err);
      }
    };

    const getProfile = async () => {
      try {
        const token = localStorage.getItem('token');

        const response = await fetch('/api/staffs/staff-profile', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        });

        const data = await response.json();

        if (response.ok) {
          console.log(data);
          document.getElementById('name').textContent = data.name;
          document.getElementById('staffId').value = data.staffId;
          document.getElementById('dateOfBirth').value = data.staffProfile.dateOfBirth ? (data.staffProfile.dateOfBirth.includes('T') ? data.staffProfile.dateOfBirth.split('T')[0] : data.staffProfile.dateOfBirth) : '';
          document.getElementById('email').value = data.staffProfile.email;
          document.getElementById('gender').value = data.staffProfile.gender;
          document.getElementById('nationality').value = data.staffProfile.nationality;
          document.getElementById('phoneNumber').value = data.staffProfile.phoneNumber;
          document.getElementById('address').value = data.staffProfile.address;
          document.getElementById('degree').value = data.staffProfile.degree;
          document.getElementById('profession').value = data.staffProfile.profession;
        } else {
          console.error(data);
        }
      } catch (err) {
        console.error(err);
      }
    };

    getProfile();
  </script>

</body>

</html>